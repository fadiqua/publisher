{"version":3,"sources":["../../server/models/User.js"],"names":["userSchema","username","type","String","required","minlength","firstName","lastName","thumbnail","picture","bio","permission","default","draft","createdAt","Date","now","_following","ObjectId","ref","_followers","toJSON","virtuals","index","email","plugin","virtual","get","statics","generateUniqueUserName","User","toLowerCase","Promise","resolve","reject","generate","findOne","exists","Math","floor","random","err","model"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;;;;;AAEA,IAAMA,aAAa,qBAAW;AAC1BC,cAAU;AACNC,cAAMC,MADA;AAENC,kBAAU,IAFJ;AAGNC,mBAAW,CAAC,CAAD,EAAI,wCAAJ;AAHL,KADgB;AAM1BC,eAAWH,MANe;AAO1BI,cAAUJ,MAPgB;AAQ1BK,eAAWL,MARe;AAS1BM,aAASN,MATiB;AAU1BO,SAAKP,MAVqB;AAW1BQ,gBAAY;AACRT,cAAMC,MADE;AAERS,iBAAS;AAFD,KAXc;AAe1BC,WAAO;AACHX,cAAMC,MADH;AAEHS,iBAAS;AAFN,KAfmB;AAmB1BE,eAAW;AACPZ,cAAMa,IADC;AAEPH,iBAASG,KAAKC;AAFP,KAnBe;AAuB1BC,gBAAY,CAAC,EAAEf,MAAM,iBAAOgB,QAAf,EAAyBC,KAAI,MAA7B,EAAD,CAvBc;AAwB1BC,gBAAY,CAAC,EAAElB,MAAM,iBAAOgB,QAAf,EAAyBC,KAAI,MAA7B,EAAD;AAxBc,CAAX,EAyBjB,EAAEE,QAAQ,EAAEC,UAAU,IAAZ,EAAV,EAzBiB,CAAnB;;AA2BAtB,WAAWuB,KAAX,CAAiB,EAAEtB,UAAU,MAAZ,EAAoBK,WAAW,MAA/B,EAAuCC,UAAU,MAAjD,EAAyDiB,OAAO,MAAhE,EAAjB;;AAEAxB,WAAWyB,MAAX;;AAEAzB,WAAW0B,OAAX,CAAmB,aAAnB,EAAkCC,GAAlC,CAAsC,YAAY;AAC9C,WAAO,KAAKrB,SAAL,GAAiB,GAAjB,GAAuB,KAAKC,QAAnC;AACH,CAFD;AAIAP,WAAW4B,OAAX,CAAmBC,sBAAnB;AAAA,2EAA4C;AAAA;;AAAA,YAAkBvB,SAAlB,QAAkBA,SAAlB;AAAA,YAA6BC,QAA7B,QAA6BA,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAClCuB,4BADkC,GAC3B,IAD2B;AAEpC7B,gCAFoC,GAEtBK,UAAUyB,WAAV,EAFsB,SAEKxB,SAASwB,WAAT,EAFL;AAAA,0DAGjC,IAAIC,OAAJ;AAAA,mGAAa,kBAAOC,OAAP,EAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,wDADW;AAAA,2HACA,iBAAMlC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EACQ6B,KAAKM,OAAL,CAAa,EAAEnC,kBAAF,EAAb,CADR;;AAAA;AACPoC,8EADO;;AAEb,4EAAGA,WAAW,IAAd,EAAoB;AAChBF,qFAAYlC,QAAZ,SAAwBqC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAc,EAAd,GAAmB,CAA9B,CAAxB;AACH,yEAFD,MAEO;AACHP,oFAAQhC,QAAR;AACH;;AANY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDADA;;AAAA,oEACXkC,QADW;AAAA;AAAA;AAAA;;AASjB,oDAAI;AACAA,6DAASlC,QAAT;AACH,iDAFD,CAEE,OAAOwC,GAAP,EAAY;AACVP,2DAAOO,GAAP;AACH;;AAbgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAb;;AAAA;AAAA;AAAA;AAAA,4BAHiC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA5C;;AAAA;AAAA;AAAA;AAAA;;AAoBA,IAAMX,OAAO,mBAASY,KAAT,CAAe,MAAf,EAAuB1C,UAAvB,CAAb;;kBAEe8B,I","file":"User.js","sourcesContent":["import mongoose, { Schema } from 'mongoose';\nimport mongoosePaginate from 'mongoose-paginate';\n\nconst userSchema = new Schema({\n    username: {\n        type: String,\n        required: true,\n        minlength: [5, 'Username must be 5 characters or more.'],\n    },\n    firstName: String,\n    lastName: String,\n    thumbnail: String,\n    picture: String,\n    bio: String,\n    permission: {\n        type: String,\n        default: 'writer'\n    },\n    draft: {\n        type: String,\n        default: ''\n    },\n    createdAt: {\n        type: Date,\n        default: Date.now\n    },\n    _following: [{ type: Schema.ObjectId, ref:'User' }],\n    _followers: [{ type: Schema.ObjectId, ref:'User' }]\n},{ toJSON: { virtuals: true } });\n\nuserSchema.index({ username: 'text', firstName: 'text', lastName: 'text', email: 'text'});\n\nuserSchema.plugin(mongoosePaginate);\n\nuserSchema.virtual('displayName').get(function () {\n    return this.firstName + ' ' + this.lastName;\n})\n;\nuserSchema.statics.generateUniqueUserName = async function ({ firstName, lastName }) {\n    const User = this;\n    let username = `${firstName.toLowerCase()}.${lastName.toLowerCase()}`;\n    return new Promise( async (resolve, reject) => {\n       const generate = async username => {\n           const exists = await User.findOne({ username });\n           if(exists !== null) {\n               generate(`${username}.${Math.floor(Math.random()*10 + 1)}`)\n           } else {\n               resolve(username)\n           }\n       };\n       try {\n           generate(username)\n       } catch (err) {\n           reject(err)\n       }\n    })\n};\n\nconst User = mongoose.model('User', userSchema);\n\nexport default User;\n"]}