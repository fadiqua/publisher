{"version":3,"sources":["../../server/services/jwtAuth.js"],"names":["jwtAuth","req","res","next","token","headers","decoded","verify","jwtSecret","id","sub","user","e","status","send","success","error"],"mappings":";;;;;QAGiBA,O,GAAAA,O;;AAHjB;;;;AACA;;;;;;AAEQ,SAASA,OAAT,CAAiBC,GAAjB,EAAsBC,GAAtB,EAA2BC,IAA3B,EAAiC;AACrC;AACA,QAAI;AACA,YAAMC,QAAQH,IAAII,OAAJ,CAAY,eAAZ,CAAd;AACA,YAAMC,UAAU,uBAAIC,MAAJ,CAAWH,KAAX,EAAkB,iBAAOI,SAAzB,CAAhB;AACAF,gBAAQG,EAAR,GAAaH,QAAQI,GAArB;AACA,eAAOJ,QAAQI,GAAf;AACAT,YAAIU,IAAJ,GAAWL,OAAX;AACAH;AACH,KAPD,CAOE,OAAOS,CAAP,EAAS;AACPV,YAAIW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,qBAAS,KADQ;AAEjBC,mBAAOJ;AAFU,SAArB;AAIH;AAEJ","file":"jwtAuth.js","sourcesContent":["import jwt from 'jsonwebtoken';\nimport config from '../config/config';\n\nexport  function jwtAuth(req, res, next) {\n    // var token = req.body.token || req.query.token || req.headers['x-access-token'] || req.headers['authorization'];\n    try {\n        const token = req.headers['authorization'];\n        const decoded = jwt.verify(token, config.jwtSecret);\n        decoded.id = decoded.sub;\n        delete decoded.sub;\n        req.user = decoded;\n        next();\n    } catch (e){\n        res.status(401).send({\n            success: false,\n            error: e\n        })\n    }\n\n}"]}