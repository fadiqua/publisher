{"version":3,"sources":["../../server/controllers/likeController.js"],"names":["likeController","post","req","res","body","id","type","parent","Like","findOne","_creator","user","_object","obj","like","save","findByIdAndUpdate","$push","story","Notifications","_from","_to","_parentTarget","_id","_target","status","json","isLiked","remove","$pull","storyObj","findOneAndRemove"],"mappings":";;;;;;;;;;AAAA;;;;;;;;AAEA,IAAMA,iBAAiB,EAAvB;AACAA,eAAeC,IAAf;AAAA,0EAAsB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oCACWD,IAAIE,IADf,EACVC,EADU,aACVA,EADU,EACNC,IADM,aACNA,IADM,EACAC,MADA,aACAA,MADA;AAAA;AAAA,+BAEA,gBAAGC,IAAH,CAAQC,OAAR,CAAgB;AAC9BC,sCAASR,IAAIS,IAAJ,CAASN,EADY;AAE9BO,qCAASP,EAFqB,EAEjBC;AAFiB,yBAAhB,CAFA;;AAAA;AAEZO,2BAFY;;AAAA,4BAMdA,GANc;AAAA;AAAA;AAAA;;AAORC,4BAPQ,GAOD,IAAI,gBAAGN,IAAP,CAAY;AACrBE,sCAASR,IAAIS,IAAJ,CAASN,EADG,EACCO,SAASP,EADV,EACcC,UADd,EACoBC,QAAQA,UAAU;AADtC,yBAAZ,CAPC;AAAA;AAAA,+BAURO,KAAKC,IAAL,EAVQ;;AAAA;AAAA;AAAA,+BAWM,gBAAGT,IAAH,EAASU,iBAAT,CAChBX,EADgB,EAEhB,EAAEY,OAAO,EAAE,UAAUf,IAAIS,IAAJ,CAASN,EAArB,EAAT,EAFgB,CAXN;;AAAA;AAWRa,6BAXQ;;AAAA,8BAgBXhB,IAAIS,IAAJ,CAASN,EAAT,KAAgBa,MAAMR,QAhBX;AAAA;AAAA;AAAA;;AAAA;AAAA,+BAiBJ,IAAI,gBAAGS,aAAP,CAAqB;AACvBC,mCAAOlB,IAAIS,IAAJ,CAASN,EADO;AAEvBgB,iCAAKH,MAAMR,QAFY;AAGvBJ,kCAAM,MAHiB;AAIvBgB,2CAAgBJ,MAAMK,GAJC;AAKvBC,qCAAU;AALa,yBAArB,EAMHT,IANG,EAjBI;;AAAA;;AA0BdZ,4BAAIsB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,qCAAS,IADQ;AAEjBhB,kCAAMT,IAAIS,IAAJ,CAASN;AAFE,yBAArB;AA1Bc;AAAA;;AAAA;AAAA;AAAA,+BA+BRQ,IAAIe,MAAJ,EA/BQ;;AAAA;AAAA;AAAA,+BAgCS,gBAAGtB,IAAH,EAASU,iBAAT,CACnBX,EADmB,EAEnB,EAAEwB,OAAO,EAAE,UAAU3B,IAAIS,IAAJ,CAASN,EAArB,EAAT,EAFmB,CAhCT;;AAAA;AAgCRyB,gCAhCQ;AAAA;AAAA,+BAqCR,gBAAGX,aAAH,CAAiBY,gBAAjB,CAAkC;AACpCX,mCAAOlB,IAAIS,IAAJ,CAASN,EADoB;AAEpCgB,iCAAKS,SAASpB,QAFsB;AAGpCJ,kCAAM,MAH8B;AAIpCgB,2CAAgBjB;AAJoB,yBAAlC,CArCQ;;AAAA;;AA4CdF,4BAAIsB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,qCAAS,KADQ;AAEjBhB,kCAAMT,IAAIS,IAAJ,CAASN;AAFE,yBAArB;;AA5Cc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAtB;;AAAA;AAAA;AAAA;AAAA;;kBAmDeL,c","file":"likeController.js","sourcesContent":["import db from '../models/index';\n\nconst likeController = {};\nlikeController.post = async (req, res) => {\n    const { id, type, parent } = req.body;\n    const obj = await db.Like.findOne({\n        _creator:req.user.id,\n        _object: id, type\n    });\n    if(!obj) {\n        const like = new db.Like({\n            _creator:req.user.id, _object: id, type, parent: parent || null\n        });\n        await like.save();\n        const story = await db[type].findByIdAndUpdate(\n            id,\n            { $push: { '_likes': req.user.id }}\n        );\n\n        if(req.user.id !== story._creator){\n            await new db.Notifications({\n                _from: req.user.id,\n                _to: story._creator,\n                type: 'like',\n                _parentTarget:  story._id,\n                _target:  null,\n            }).save();\n        }\n\n        res.status(200).json({\n            isLiked: true,\n            user: req.user.id\n        })\n    } else {\n        await obj.remove();\n        const storyObj = await db[type].findByIdAndUpdate(\n            id,\n            { $pull: { '_likes': req.user.id }}\n        );\n\n        await db.Notifications.findOneAndRemove({\n            _from: req.user.id,\n            _to: storyObj._creator,\n            type: 'like',\n            _parentTarget:  id,\n        });\n\n        res.status(200).json({\n            isLiked: false,\n            user: req.user.id\n        })\n    }\n};\n\nexport default likeController;"]}