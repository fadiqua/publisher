{"version":3,"sources":["../../server/controllers/genericController.js"],"names":["genericController","search","req","res","value","query","Promise","all","Story","find","isDeleted","isDraft","$text","$search","limit","User","result","status","json","success","stories","users","error","message","advancedSearch","q","page","Model","Object","keys","indexOf","console","log","paginate","select","sort","createdAt","data","send"],"mappings":";;;;;;;;;;AAAA;;;;;;;;AAEA,IAAMA,oBAAoB,EAA1B;;AAEAA,kBAAkBC,MAAlB;AAAA,0EAA2B,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACfC,6BADe,GACLF,IAAIG,KADC,CACfD,KADe;AAAA;AAAA;AAAA,+BAGEE,QAAQC,GAAR,CAAY,CAC7B,gBAAGC,KAAH,CAASC,IAAT,CAAc,EAACC,WAAW,KAAZ,EAAmBC,SAAS,KAA5B,EAAmCC,OAAO,EAACC,SAAST,KAAV,EAA1C,EAAd,EAA2EU,KAA3E,CAAiF,CAAjF,CAD6B,EAE7B,gBAAGC,IAAH,CAAQN,IAAR,CAAa,EAACG,OAAO,EAACC,SAAST,KAAV,EAAR,EAAb,EAAwCU,KAAxC,CAA8C,CAA9C,CAF6B,CAAZ,CAHF;;AAAA;AAGbE,8BAHa;;AAOnBb,4BAAIc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,qCAAS,IADQ;AAEjBC,qCAASJ,OAAO,CAAP,CAFQ;AAGjBK,mCAAOL,OAAO,CAAP;AAHU,yBAArB;AAPmB;AAAA;;AAAA;AAAA;AAAA;;AAanBb,4BAAIc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBC,qCAAS,KADQ;AAEjBG,mCAAO,YAAEC;AAFQ,yBAArB;;AAbmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA3B;;AAAA;AAAA;AAAA;AAAA;AAmBAvB,kBAAkBwB,cAAlB;AAAA,2EAAmC,kBAAOtB,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAETD,IAAIG,KAFK,EAErBoB,CAFqB,cAErBA,CAFqB,EAElBC,IAFkB,cAElBA,IAFkB;AAGvBC,6BAHuB,GAGfC,OAAOC,IAAP,CAAY3B,IAAIG,KAAhB,EAAuByB,OAAvB,CAA+B,OAA/B,MAA4C,CAAC,CAA7C,GAAgD,MAAhD,GAAuD,OAHxC;;AAI7BC,gCAAQC,GAAR,CAAYL,KAAZ;AAJ6B;AAAA,+BAKV,gBAAGA,KAAH,EACdM,QADc,CACL,EAACrB,OAAO,EAACC,SAASY,CAAV,EAAR,EADK,EAEX;AACIS,oCAAQ,OADZ;AAEIC,kCAAM;AACFC,2CAAW;AADT,6BAFV;AAKIV,kCAAMA,IALV;AAMIZ,mCAAO;AANX,yBAFW,CALU;;AAAA;AAKvBuB,4BALuB;;AAe7BlC,4BAAIc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,mBACOmB,IADP,GAf6B;AAAA;;AAAA;AAAA;AAAA;;AAmB3BlC,4BAAImC,IAAJ,CAAS,GAAT,EAAcpB,IAAd,CAAmB;AACfC,qCAAS,KADM;AAEfG,mCAAO,aAAEC;AAFM,yBAAnB;;AAnB2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAnC;;AAAA;AAAA;AAAA;AAAA;kBAyBevB,iB","file":"genericController.js","sourcesContent":["import db from '../models/index';\n\nconst genericController = {};\n\ngenericController.search = async (req, res) => {\n    const { value } = req.query;\n    try {\n        const result = await Promise.all([\n            db.Story.find({isDeleted: false, isDraft: false, $text: {$search: value}}).limit(6),\n            db.User.find({$text: {$search: value}}).limit(4),\n        ]);\n        res.status(200).json({\n            success: true,\n            stories: result[0],\n            users: result[1]\n        })\n    } catch (e) {\n        res.status(500).json({\n            success: false,\n            error: e.message\n        })\n    }\n};\ngenericController.advancedSearch = async (req, res) => {\n  try {\n      const { q, page } = req.query;\n      const Model = Object.keys(req.query).indexOf('users') !== -1? 'User':'Story';\n      console.log(Model);\n      const data = await db[Model]\n          .paginate({$text: {$search: q}},\n              {\n                  select: '-tags',\n                  sort: {\n                      createdAt: 1\n                  },\n                  page: page,\n                  limit: 6\n              });\n      res.status(200).json({\n          ...data\n      })  }\n      catch (e) {\n        res.send(500).json({\n            success: false,\n            error: e.message\n        })\n      }\n};\nexport default genericController;"]}